@using FindHikingFellow.Core.Models.Tour
@model AllToursQueryModel

@{
    ViewData["Title"] = "All Tours";
}

<form method="get">
    <div class="row">
        <div class="form-group col-md-3">
            <div class="form-group">
                <label asp-for="Destination"></label>
                <select asp-for="Destination" class="form-control">
                    <option value="">All</option>
                    @foreach (var destination in Model.Destinations)
                    {
                        <option value="@destination">@destination</option>
                    }
                </select>
            </div>
        </div>

        <div class="form-group col-md-3">
            <label asp-for="SearchTerm"></label>
            <input asp-for="SearchTerm" class="form-control" placeholder="Search for">
        </div>

        <div class="form-group col-md-3">
            <div class="form-group">
                <label asp-for="Sorting"></label>
                <select asp-for="Sorting" class="form-control">
                    <option value="1" selected>Last added</option>
                    <option value="2">Soonest upcoming</option>
                    <option value="3">Most popular</option>
                    <option value="4">Finished</option>
                </select>
            </div>
        </div>


        <div class="form-group col-md-3">
            <div class="form-group mt-3 p-2">
                <input type="submit" value="Search" class="btn btn-primary" />
            </div>
        </div>
    </div>

</form>
@{
    var previousPage = Model.CurrentPage - 1;
    if (previousPage < 1)
    {
        previousPage = 1;
    }

    var maxPage = Math.Ceiling((double)Model.TotalTours / AllToursQueryModel.ToursPerPage);
}

<partial name="_TourPartial" model="@Model.Tours"/>

<div class="row mb-5">
    <div class="col-md-6">
        <a class="btn btn-primary mt-3 @(Model.CurrentPage == 1 ? "disabled" : string.Empty)"
           asp-controller="Tour"
           asp-action="All"
           asp-route-currentPage="@previousPage"
           asp-route-destination="@Model.Destination"
           asp-route-searchTerm="@Model.SearchTerm"
           asp-route-sorting="@((int)Model.Sorting)"><<</a>
    </div>

    @{
        var shouldButtonBeDisabled = Model.CurrentPage == maxPage ||
        !Model.Tours.Any();
    }

    <div class="col-md-6">
        <a class="btn btn-primary mt-3 float-end @(shouldButtonBeDisabled ? "disabled" : string.Empty)"
           asp-controller="Tour"
           asp-action="All"
           asp-route-destination="@Model.Destination"
           asp-route-currentPage="@(Model.CurrentPage + 1)"
           asp-route-searchTerm="@Model.SearchTerm"
           asp-route-sorting="@((int)Model.Sorting)">>></a>
    </div>
</div>

@if (!Model.Tours.Any())
{
    <h2 class="text-center">No tours found by the given criteria :)</h2>
}

