@using FindHikingFellow.Infrastructure.Data.Models
@using Microsoft.AspNetCore.Identity
@using System.Security.Claims
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@{
    string userName = string.Empty;

    if (SignInManager.IsSignedIn(User))
    {
        userName = User.FindFirstValue(FindHikingFellow.Infrastructure.Constants.CustomClaims.UserFullNameClaim) ?? string.Empty;
    }
}

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
        @if(!string.IsNullOrWhiteSpace(userName))
        {
            <li class="nav-item">
                <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @userName!</a>
            </li>
        }
        else
        {
            <li class="nav-item">
                <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @User?.Identity?.Name!</a>
            </li>
        }
        <li class="nav-item">
        <form  class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button  type="submit" class="nav-link btn btn-link text-dark">Logout</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}
</ul>
